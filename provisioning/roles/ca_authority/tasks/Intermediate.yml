---
# intermediate setup
- file: path={{ role_path }}/tmp/ca/intermediate state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/certs state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/crl state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/csr state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/newcerts state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/private state=directory
- file: path={{ role_path }}/tmp/ca/intermediate/index.txt state=touch
- copy: content="1000" dest="{{ role_path }}/tmp/ca/intermediate/serial"
- copy: content="1000" dest="{{ role_path }}/tmp/ca/intermediate/crlnumber"

- name: OpenSSL | Generate openssl Intermediate config file
  template: src=templates/openssl-intr.cnf.j2 dest={{ role_path }}/tmp/ca/intermediate/openssl-intr.cnf

- name: OpenSSL | Create Intermediate key
  command: 'openssl genrsa -aes256 -passout pass:{{ intr_password }} -out intermediate/private/intermediate.key.pem 4096'
  args:
    chdir: '{{ role_path }}/tmp/ca'
    creates: '{{ role_path }}/tmp/ca/intermediate/private/intermediate.key.pem'

- name: OpenSSL | Create Intermediate Cert Signing Request
  command: 'openssl req -config intermediate/openssl-intr.cnf -new -passin pass:{{ intr_password }} \
    -subj "/C=US/ST=Colorado/L=Golden/O=Carey Ltd/OU=Support Team/CN=Carey Ltd Intermediate CA" \
    -sha256 \
    -key intermediate/private/intermediate.key.pem \
    -out intermediate/csr/intermediate.csr.pem'
  args:
    chdir: '{{ role_path }}/tmp/ca'
    creates: '{{ role_path }}/tmp/ca/intermediate/csr/intermediate.csr.pem'

- name: OpenSSL | Sign Intermediate Cert Signing Request
  command: 'openssl ca -batch -config openssl-ca.cnf -extensions v3_intermediate_ca \
    -passin pass:{{ ca_password }} \
    -days 3650 -notext -md sha256 \
    -in intermediate/csr/intermediate.csr.pem \
    -out intermediate/certs/intermediate.cert.pem'
  args:
    chdir: '{{ role_path }}/tmp/ca'
    creates: '{{ role_path }}/tmp/ca/intermediate/certs/intermediate.cert.pem'

# Intermediate truststore
- name: Java Keytool | Truststore Intermediate
  command: 'keytool -importcert -noprompt -alias my_intr \
    -keystore truststore.jks  -storepass password -keypass password \
    -file {{ role_path }}/tmp/ca/intermediate/certs/intermediate.cert.pem'
  args:
    chdir: '{{ role_path }}/tmp/keytool'
  register: trust_intr
  changed_when: trust_intr.rc == 0
  ignore_errors: true
