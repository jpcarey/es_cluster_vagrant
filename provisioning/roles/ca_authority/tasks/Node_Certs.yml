---
# CA truststore
- name: Java Keytool | Keystore CA
  command: 'keytool -importcert -noprompt -alias my_ca \
    -keystore {{ item }}.jks -storepass password -keypass password \
    -file {{ playbook_dir }}/certs/ca/certs/ca.cert.pem'
  args:
    chdir: '{{ playbook_dir }}/certs/keytool'
  with_items: "{{ groups['elasticsearch'] }}"
  register: keystore_ca
  changed_when: keystore_ca.rc == 0
  ignore_errors: true
# Intermediate truststore
- name: Java Keytool | Keystore Intermediate
  command: 'keytool -importcert -noprompt -alias my_intr \
    -keystore {{ item }}.jks  -storepass password -keypass password \
    -file {{ playbook_dir }}/certs/ca/intermediate/certs/intermediate.cert.pem'
  args:
    chdir: '{{ playbook_dir }}/certs/keytool'
  with_items: "{{ groups['elasticsearch'] }}"
  register: keystore_intr
  changed_when: keystore_intr.rc == 0
  ignore_errors: true

- name: Java Keytool | Generate Server Keys
  command: 'keytool -genkey -noprompt -alias {{ item }} \
    -keystore {{ item }}.jks -storepass password -keypass password \
    -keyalg RSA -keysize 2048 -validity 712 -ext {{ hostvars[item]["cert_san"] }} \
     -dname "CN={{ hostvars[item]["ansible_fqdn"] }}, OU=Support Team, O=Carey Ltd, L=Golden, ST=Colorado, C=US"'
  args:
    chdir: '{{ playbook_dir }}/certs/keytool'
  with_items: "{{ groups['elasticsearch'] }}"
  register: gen_server_keys
  changed_when: gen_server_keys.rc == 0
  ignore_errors: true

  # "rc": 1, "stdout_lines": ["keytool error: java.lang.Exception: Key pair not generated, alias <node3> already exists

- name: Java Keytool | Generate Server Cert Signing Requests
  command: 'keytool -certreq -noprompt -alias {{ item }} \
    -keystore {{ item }}.jks -storepass password -keypass password \
    -file {{ playbook_dir }}/certs/ca/intermediate/csr/{{ item }}.csr \
    -ext {{ hostvars[item]["cert_san"] }}'
  args:
    chdir: '{{ playbook_dir }}/certs/keytool'
    creates: '{{ playbook_dir }}/certs/ca/intermediate/csr/{{ item }}.csr'
  with_items: "{{ groups['elasticsearch'] }}"
  tags: test

- name: OpenSSL | Sign Server Cert Signing Request
  command: 'openssl ca -batch -config intermediate/openssl-intr.cnf -extensions v3_req \
    -passin pass:{{ INTR_password }} -notext -md sha256 \
    -in intermediate/csr/{{ item }}.csr \
    -out intermediate/certs/{{ item }}.cert.pem'
  args:
    chdir: '{{ playbook_dir }}/certs/ca'
    creates: '{{ playbook_dir }}/certs/ca/intermediate/certs/{{ item }}.cert.pem'
  with_items: "{{ groups['elasticsearch'] }}"
  tags: test

- name: Java Keytool | Import Signed Certs
  command: 'keytool -importcert -noprompt -alias {{ item }} \
    -keystore {{ item }}.jks -storepass password -keypass password \
    -file {{ playbook_dir }}/certs/ca/intermediate/certs/{{ item }}.cert.pem'
  args:
    chdir: '{{ playbook_dir }}/certs/keytool'
  with_items: "{{ groups['elasticsearch'] }}"
  register: server_signed
  changed_when: server_signed.rc == 0
  ignore_errors: true

  # Certificate reply and certificate in keystore are identical
  # "rc": 0, "stderr": "Certificate reply was installed in keystore"
