---
### get all facts for use in playbooks
- hosts: all
  gather_facts: true
  tasks:
    - name: Create Subject Alternative Name (SAN)
      set_fact:
        cert_san: "san=dns:{{ ansible_fqdn }},{% for i in ansible_all_ipv4_addresses -%}ip:{{ i }}{%- if not loop.last %},{% endif -%}{%- endfor %}"

### this runs locally to fetch ansible-elasticsearch role, and setup all certs
- hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - ca_authority

### setup elasticsearch nodes
- hosts: elasticsearch
  sudo: yes
  vars:
  pre_tasks:
    - name: /etc shield directory
      file: path=/etc/elasticsearch/{{ ansible_nodename }}/shield state=directory

    - name: copy keystore & truststore
      copy: src=certs/keytool/{{ item }} dest=/etc/elasticsearch/{{ ansible_nodename }}/shield/{{ item }}
      with_items:
        - "{{ ansible_nodename }}.jks"
        - "truststore.jks"
    - name: copy default user & role
    # This should be removed at some point, need to find a decent workaround.
    # the ansible-elasticsearch role does not properly support shield,
    # and the custom directory installation complicates the ${es_home}/bin/esusers
      copy: src=_tmp/{{ item }} dest=/etc/elasticsearch/{{ ansible_nodename }}/shield/{{ item }}
      with_items:
        - users
        - users_roles

  tasks:
  roles:
    - { role: elasticsearch,
      es_config: {
        node.name: "${HOSTNAME}",
        cluster.name: "custom-cluster",
        network.host: [ "_local_", "_site_" ],
        discovery.zen.ping.unicast.hosts: '{{ discovery }}',
        shield.ssl.keystore.path: '/etc/elasticsearch/{{ ansible_nodename }}/shield/{{ ansible_nodename }}.jks',
        shield.ssl.keystore.password: password,
        shield.ssl.truststore.path: '/etc/elasticsearch/{{ ansible_nodename }}/shield/truststore.jks',
        shield.ssl.truststore.password: password,
        shield.transport.ssl: true,
        shield.http.ssl: true,
        shield.ssl.hostname_verification.resolve_name: false,
        # shield.ssl.ciphers: [ "TLS_RSA_WITH_AES_128_CBC_SHA256", "TLS_RSA_WITH_AES_128_CBC_SHA" ],
        shield.audit.enabled: true,
        shield.http.ssl.client.auth: optional
      }
    }
  handlers:
